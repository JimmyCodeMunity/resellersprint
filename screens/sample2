import React, { useEffect, useState } from "react";
import { View, Text, StyleSheet, Image, ScrollView,TouchableOpacity } from "react-native";
import axios from 'axios';




const SettingScreen = ({navigation,route,item}) => {
  const { email, role } = route.params;
  const [products, setProducts] = useState([]);

  const [addedToCart, setAddedToCart] = useState(false);

  const handleAddToCart = () => {
    axios.post('http://192.168.2.105:3000/addcart', item)
      .then(response => {
        setAddedToCart(true);
      })
      .catch(error => {
        console.error(error);
      });
  };
  

  useEffect(() => {
    fetchData();
  }, []);

  const fetchData = async () => {
    try {
      const response = await axios.get('http://192.168.2.105:3000/productlist');
      setProducts(response.data);
    } catch (error) {
      console.log(error);
    }
  };

  const renderProductCards = () => {
    return products.map((ditem) => (
      <ScrollView
            style={styles.deals}
            horizontal={true}
            showsHorizontalScrollIndicator={false}
          >
            
              <TouchableOpacity
            
              onPress={() =>
                navigation.navigate("View", {
                  itemName: ditem.title,
                  itemImage:ditem.image,
                  itemPrice:ditem.price,
                  email,
                })
              }
              key={ditem._id}
            >
                <View style={styles.card1} key={ditem.id}>
                  <Image
                    source={{ uri: ditem.image }}
                    style={styles.image1}
                    resizeMode="cover"
                  />
                  <Text>{ditem.title}</Text>
                  <Text style={{ fontSize: 13, fontWeight: "bold" }}>
                    Kshs.{ditem.price}
                  </Text>
                </View>
              </TouchableOpacity>
            
          </ScrollView>
    ));
  };

  return (
    <View style={styles.container}>
      <Text style={styles.heading}>Product List</Text>
      <ScrollView contentContainerStyle={styles.cardContainer}>
        {renderProductCards()}
      </ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
  },
  heading: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  cardContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  productCard: {
    width: '45%',
    marginBottom: 20,
    borderRadius: 10,
    backgroundColor: '#f5f5f5',
    padding: 10,
    alignItems: 'center',
  },
  productImage: {
    width: 100,
    height: 100,
    borderRadius: 10,
    marginBottom: 10,
  },
  productName: {
    fontWeight: 'bold',
    marginBottom: 5,
  },
  productPrice: {
    color: 'gray',
  },
  cardContainer: {
    flexDirection: "row",
    flexWrap: "wrap",
    justifyContent: "flex-start",
    paddingVertical: 12,
    height: 90,
  },
  card: {
    backgroundColor: "#ffffff",
    borderWidth: 1,
    borderColor: "orange",
    padding: 5,
    margin: 5,
    minWidth: 80,
    borderRadius: 12,
    alignItems: "center",
  },
  image: {
    width: 40,
    height: 40,
    resizeMode: "contain",
  },
  container1: {
    paddingHorizontal: 15,
  },
  image1: {
    height: 100,
    backgroundColor: "#fff",
    width: 100,
  },
  card1: {
    height: 150,
    backgroundColor: "#fff",
    width: 150,
    alignItems: "center",
    justifyContent: "center",
    borderWidth: 1,
    borderColor: "orange",
    borderRadius: 12,
    marginTop: 10,
    marginRight: 20,
  },
  deals: {
    flexWrap: "wrap",
    flexDirection: "row",
  },
});

export default SettingScreen;
